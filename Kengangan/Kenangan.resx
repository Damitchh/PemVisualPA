<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAHtQTFRF////
        MzMzNDQ0Nzc3KCgojY2NLy8vKysrFhYWJycnGRkZEhISISEhICAgJCQkeXl58PDwQkJCra2tS0tLPT09
        aWlp4+PjCwsLcnJy9/f31tbWg4ODWVlZtra25OTkT09Pm5ub0NDQoaGhwsLCYWFhkJCQvr6+AAAAp6en
        1A1XIAAABB1JREFUeF7t3et2qjAQBWCtNCAIolZra629aE/f/wmPl5EKBIiNk4Gu/f2ruiR7kXHEQugB
        AAAAAAAAAAAAAAAAAAAAAAAAAADcRDodzwZ3Lgxm42lKW3XneR6NfNV3Q/mjaPlMW3ZkGfi0dVf8YEzb
        diF9GNJ2XUomzqZqmriannnKdxVxIhNwP1NnNAJmY4kpepKsaAysngPanIRgQaPgNHf9KXrJd/CBmka0
        MRnBE42Dz3RE25IRf9E4+IwlJ2m/793TOPiItYoT9ULj4DOgTQlRExoHH+GE/QGNgw8SckNCe0jIDQnt
        ISE3JLSHhNyQ0B4SckNCe0jIDQntISE3JLSHhNyQ0B4SckNCe0jIDQntISE3JLSHhNyQ0B4SckNCe0jI
        DQntISE3JLSHhNyQ0N7tE153WnUHEw63V50b372E4cd1J8d3LqE37/UWIf1homsJ1XHA6ysidi0hXal1
        xeVwHUsYreldzUuxWwl/Lid8faSHGnUqob+h99xbm17V2KmE8eVlvaal2KWEwTu95cmDWSm2JmHzHonf
        6B2JYVdsS8Lko2m83pbeMGNWii1JGKx7b/UR1V35clejUmxHwuRwPfKydryRbpkLk1JsRULqArOaY4b9
        TtYwKcVWJExOXSD1KnfJcSdrTJsjtiFhdO4Cz1UXtqvK1R/qp/ZBCxJedIGqT8egegWPxlKUT3g44Mvs
        Yno0J/qkpzUWTV9QxROeDvgyc48ev1Bs9XlNpSieMCwszVGedX6p1ec1lKJ0wuyA7yxN6Jkz1W9a2aK+
        FIUTjsrrx7wXCuuxcUWrRe3aIrIJfd2SDtPcB2o4pYdr1JaibMKhtgusLlZDqWr1eXWlKJowa/UFL9nX
        N9NVLWpKUTJh+EEvKXoanAccvtJDDRbVB1KCCYdLekXZKxVWXavPqy5FuYTqgV6g83ncJ/GO/jRQWYpy
        CYutPu9wyK/9pK2UzewCsYRRw/pN46S51edUdUWphJpWX7D5d+XilRWlKJTQYAKmBq0+T1+KMgmVx7KK
        2p2uFGUSBjyrp2rXLxRJGH7Tc7f2rSlFiYQ1rd6W5gBaICHrCmrlriiQ0PS75q+Uf65zn9D8u+avlLqi
        84Qx90qNxVJ0nbDpZyV7P4deJ64T1h1Q3Mgi/5ur44Rqvrvn9rbJ7UTX+1B5/GRnqXtIaA8JuSGhvb+f
        0OR8CUa1P1reRr7/OudgPe+V5r+6Dnn8939YC6+rrz0R56aE740QObgRy/Kv39+i7j9f/ALOn0wyq+LJ
        B+6M+O/9cDSRmqeu7hXUS/syEf0B/y1YSDqTmKijjbOAe6vAdeP3Akc1eLYYh7Gn3HyDU2oYxysnn6I5
        T1/32wndoZDXZLv7dDlBAQAAAAAAAAAAAAAAAAAAAAAAAADg7+r1/gNNOVYZ5TXivQAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>